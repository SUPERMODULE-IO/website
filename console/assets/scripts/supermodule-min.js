import{ethers as e}from"https://cdnjs.cloudflare.com/ajax/libs/ethers/6.3.0/ethers.js";let deployButton=document.getElementById("deployButton"),generateCode=document.getElementById("generateCode"),embedCode=document.getElementById("embedcode"),formSection=document.getElementById("form_section"),connectButton=document.getElementById("connectButton"),userContractField=document.getElementById("userContract"),userEnteredContract=document.getElementById("caddress"),withdrawMenu=document.getElementById("withdrawMenu"),transactionsMenu=document.getElementById("transactionsMenu"),logoutMenu=document.getElementById("logoutMenu"),networkDashboard=document.getElementById("networkselectdashboard"),network=document.getElementById("networkselect"),token=document.getElementById("tokenselect"),module=document.getElementById("moduleselect"),version=document.getElementById("version"),contractSection=document.getElementById("contract_section"),contractDisplay=document.getElementById("contractDisplay"),metamaskEnabled=!1,userContract=window.localStorage.getItem("user_contract");null==userContract||""==userContract?(withdrawMenu.classList.add("hidden"),transactionsMenu.classList.add("hidden"),logoutMenu.classList.add("hidden")):(userContractField.value=userContract,document.getElementById("connectSection").classList.add("hidden")),window.addEventListener("load",function(){window.ethereum?(console.log("Ethereum support is available"),window.ethereum.isMetaMask?(console.log("MetaMask is active"),metamaskEnabled=!0):alert("MetaMask wallet not found. Please retry after setting up Metamask!")):console.log("Ethereum support is not found")});let termsCheck=document.getElementById("termsCheck");termsCheck.addEventListener("change",e=>{e.target.checked?deployButton.disabled=!1:deployButton.disabled=!0}),transactionsMenu.addEventListener("click",async()=>{let e=window.localStorage.getItem("user_network");"eth"==e?window.location.href="https://etherscan.io/address/"+userContract+"#tokentxns":"matic"==e?window.location.href="https://polygonscan.com/address/"+userContract+"#tokentxns":window.location.href="#"}),withdrawMenu.addEventListener("click",async()=>{withdrawBalance()}),logoutMenu.addEventListener("click",async()=>{window.localStorage.removeItem("user_contract"),window.localStorage.removeItem("user_network"),document.getElementById("connectSection").classList.remove("hidden"),window.location.reload()}),connectButton.addEventListener("click",async()=>{null!=userEnteredContract&&""!=userEnteredContract?(window.localStorage.setItem("user_contract",userEnteredContract.value),window.localStorage.setItem("user_network",networkDashboard.value),withdrawMenu.classList.remove("hidden"),transactionsMenu.classList.remove("hidden"),logoutMenu.classList.remove("hidden"),connectButton.value="Connecting...",connectButton.disabled=!0,window.location.reload(),document.getElementById("connectSection").classList.add("hidden")):alert("Please enter the deployed contract address to get connected!")}),generateCode.addEventListener("click",async()=>{let e=document.getElementById("contractDisplay").value,t=document.getElementById("payAmount").value,a=window.localStorage.getItem("user_network"),n=`
    <script type="module">
    import { pay } from "https://cdn.jsdelivr.net/gh/SUPERMODULE-IO/website@v1.1-beta/community/assets/scripts/spay-min.js";
    window.pay = pay;
    </script>
    <input type="button" id="spay_button" onclick="pay('`+t+"','"+e+"','"+a+"','usdc','v1')\" value=\"Pay\" >";embedCode.value=n}),deployButton.addEventListener("click",async()=>{deployButton.disabled=!0,deployButton.innerHTML="Deploying...",deployButton.classList.add("animate-pulse");let e="",t=await deployContract(module.value,network.value,token.value,version.value).catch(t=>e=t.reason);deployButton.classList.remove("animate-pulse"),""==e?(deployButton.innerHTML="Deployed",contractDisplay.value=t,formSection.classList.add("hidden"),contractSection.classList.remove("hidden"),window.localStorage.setItem("user_contract",t),window.localStorage.setItem("user_network",network.value)):(alert("Error : "+e),deployButton.innerHTML=`ðŸš€ Deploy`,deployButton.disabled=!1)});let deployContract=async(t,a,n,o)=>{var r=!0,s="./"+t+"_"+a+"_"+n+"_"+o+"-min.js";if("eth"==a?await switchToEthereum():"matic"==a?await switchToMatic():r=!1,!r)return"No module found";{let c=await new e.BrowserProvider(window.ethereum),l=await c.getSigner();return deployModContract(l,s)}},deployModContract=async(t,a)=>{let n=await import(a),o=await new e.ContractFactory(n.ABI(),n.BYTECODE(),t),r=await o.deploy(),s=await r.getAddress();return s},withdrawBalance=async()=>{if(!confirm("Please make sure that you have entered the right contract address and have enough balance in your contract before initiating withdrawal!"))return;let t=await new e.BrowserProvider(window.ethereum),a=await t.getSigner(),n=window.localStorage.getItem("user_contract"),o=window.localStorage.getItem("user_network");if("eth"==o)await switchToEthereum();else if("matic"==o)await switchToMatic();else{alert("Invalid Network");return}var r="./pay_"+o+"_usdc_v1-min.js";let s=await import(r),c=await new e.Contract(n,s.ABI(),a);await c.settleFunds(s.TOKEN_ADDRESS(),{gasLimit:3e6}).then(e=>{console.dir("RESULT::"+e),alert("Withdraw Initiated"),e.wait(),then(e=>{alert("Withdraw Successful")}).catch(e=>alert("ERROR::"+e.reason))}).catch(e=>alert(e.reason))},switchToEthereum=async()=>{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x1"}]})},switchToMatic=async()=>{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x89",rpcUrls:["https://polygon-rpc.com/"],chainName:"Matic Mainnet",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},blockExplorerUrls:["https://explorer.matic.network"]}]})};