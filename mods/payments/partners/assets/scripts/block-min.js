import{nftcontract,NFTABI,PAY_V1_ABI,PAY_V1_BYTECODE}from'./config-min.js';import{ethers}from"https://cdnjs.cloudflare.com/ajax/libs/ethers/6.3.0/ethers.js";const loginButton=document.getElementById("loginButton");const deployButton=document.getElementById("deployButton");const transactionsMenu=document.getElementById("transactionsMenu");const withdrawMenu=document.getElementById("withdrawMenu");const terms=document.getElementById("termsCheck");const button=document.querySelector('#menu-button');const menu=document.querySelector('#menu');let metamaskEnabled=false;window.addEventListener('load',function(){if(window.ethereum){console.log('Ethereum support is available')
if(window.ethereum.isMetaMask){console.log('MetaMask is active')
metamaskEnabled=true;}else{alert('MetaMask is not available')}}else{console.log('Ethereum support is not found')}})
button.addEventListener('click',()=>{menu.classList.toggle('hidden');});const scriptURL='https://script.google.com/macros/s/AKfycbzKRh9JkE-KEFEHJx-ubNr5J5eeqKt_0MTEVFfqKWUtj-dYkFoM0LOjE2psJiKt44iQ/exec';transactionsMenu.addEventListener("click",function(){var dcontract=window.localStorage.getItem("dcontract");transactionsMenu.href='https://polygonscan.com/address/'+dcontract+'#tokentxns';});withdrawMenu.addEventListener("click",function(){var dcontract=window.localStorage.getItem("dcontract");withdrawNow(dcontract);});terms.addEventListener("change",function(){if(this.checked){deployButton.disabled=false;}else{deployButton.disabled=true;}});loginButton.addEventListener("click",async()=>{loginButton.disabled=true;loginButton.innerHTML=`Authenticating...`;loginButton.classList.add('animate-pulse');if(typeof window.ethereum!=="undefined"){await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x89",rpcUrls:["https://polygon-rpc.com/"],chainName:"Matic Mainnet",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},blockExplorerUrls:["https://explorer.matic.network"]}]});const provider=await new ethers.BrowserProvider(window.ethereum)
const signer=await provider.getSigner()
const network=await signer.provider.getNetwork()
console.log("chaid"+network.chainId);console.log("chaid"+network.name);if(network.chainId!=137&&network.name!="matic"){alert("Wrong network! Switch to Matic.");loginButton.disabled=false;loginButton.innerHTML=`NFT LOG IN`;loginButton.classList.remove('animate-pulse');return;}
const addressraw=signer.getAddress()
const wallet=(await addressraw).valueOf()
let contract=new ethers.Contract(nftcontract(),NFTABI(),signer);let ids=0;try{ids=await contract.balanceOf(wallet,0);}catch(error){console.log('ERROR::'+error);}
if(ids>=1){window.localStorage.setItem("authorisedWalletAddress",wallet);loadAdminSection(wallet);}
else{alert('Not Authorised: Your wallet does not contain the necessary NFT');loginButton.disabled=false;loginButton.innerHTML=`NFT LOG IN`;loginButton.classList.remove('animate-pulse');}}else{if(window.prompt('No wallet found! Install Metamask wallet ?','https://metamask.io/'))
location.href='https://metamask.io/';loginButton.disabled=false;loginButton.innerHTML=`NFT LOG IN`;loginButton.classList.remove('animate-pulse');}});const switchToMatic=async()=>{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x89",rpcUrls:["https://polygon-rpc.com/"],chainName:"Matic Mainnet",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},blockExplorerUrls:["https://explorer.matic.network"]}]});}
deployButton.addEventListener("click",async()=>{deployButton.disabled=true;deployButton.innerHTML=`Deploying...`;deployButton.classList.add('animate-pulse');deployContract();});const deployContract=async()=>{await switchToMatic();const provider=await new ethers.BrowserProvider(window.ethereum)
const signer=await provider.getSigner()
const addressraw=await signer.getAddress()
const wallet=(await addressraw).valueOf()
let productContract=await new ethers.ContractFactory(PAY_V1_ABI(),PAY_V1_BYTECODE(),signer);const contract=await productContract.deploy();const contractAddress=await contract.getAddress();console.log("Contract::"+contractAddress);persistContractDetails(contractAddress,wallet);}
async function persistContractDetails(contractAddress,walletAddress){let email=document.getElementById('email').value;let bname=document.getElementById('bname').value;let success=false;let txn=await fetch(scriptURL,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:'email='+email+'&wallet='+walletAddress+'&udcontract='+contractAddress+'&bname='+bname}).then(response=>response.json().then(data=>({data:console.log('RDATA',(data.result=='error')?success=false:success=true),status:response.status}))).catch(error=>console.error('NetworkError:',alert('NETWORK ERROR::'+error)))
console.log('TXN:'+txn);if(success){showAdminSection(walletAddress);}else{deployButton.disabled=false;deployButton.innerHTML=`Deploy`;deployButton.classList.remove('animate-pulse');}}
async function getUser(wallet){let noUser=false;let responseData='';let urlWithParams=scriptURL+'?wallet='+wallet+'&gprofile=true';await fetch(urlWithParams,{method:'GET',headers:{'Content-Type':'application/x-www-form-urlencoded'}}).then(response=>response.json().then(data=>({data:console.log('RDATA',('error'==data.result)?console.log('ERROR::'+data.message,('no user found'==data.message)?noUser=true:noUser=false):(responseData=data)),status:response.status}))).catch(error=>console.error('NetworkError:',alert('NETWORK ERROR::'+error)))
if(noUser){return null;}else{return responseData;}}
async function loadAdminSection(wallet){var user=await getUser(wallet);if(user==null){showDeploymentSection();}else{window.localStorage.setItem("email",user.user.email);window.localStorage.setItem("dcontract",user.user.u_dcontract);window.localStorage.setItem("wallet",user.user.u_wallet);window.localStorage.setItem("bname",user.user.b_name);showAdminSection(wallet);}}
function showDeploymentSection(){document.getElementById("loginSection").classList.add('hidden');document.getElementById("deploymentSection").classList.remove('hidden');}
async function showAdminSection(wallet){document.getElementById("loginSection").classList.add('hidden');document.getElementById("deploymentSection").classList.add('hidden');document.getElementById("adminSection").classList.remove('hidden');document.getElementById("headerSection").classList.remove('hidden');document.getElementById("footerSection").classList.remove('hidden');let responseData="";let noproducts=false;let urlWithParams=scriptURL+'?wallet='+wallet+'&gall=true';await fetch(urlWithParams,{method:'GET',headers:{'Content-Type':'application/x-www-form-urlencoded'}}).then(response=>response.json().then(data=>({data:console.log('RDATA',('error'==data.result)?console.log('ERROR::'+data.message,('no products'==data.message)?noproducts=true:noproducts=false):(responseData=data)),status:response.status}))).catch(error=>console.error('NetworkError:',alert('NETWORK ERROR::'+error)))
if(noproducts){addNewRow(wallet,1);return;}
const productTable=document.getElementById("productTable");for(let i=0;i<responseData.products.length;i++){const row=document.createElement('tr');row.className="border-b dark:border-neutral-500";row.innerHTML=`<td class="whitespace-nowrap px-6 py-4 font-medium">${responseData.products[i].p_id}</td><td class="whitespace-nowrap px-6 py-4"><input type="text"id="pname${responseData.products[i].p_id}"name="pname${responseData.products[i].p_id}"value="${responseData.products[i].p_name}"
class="w-full bg-gray-800 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
required></td><td class="whitespace-nowrap px-6 py-4"><input type="number"id="price${responseData.products[i].p_id}"name="price${responseData.products[i].p_id}"value="${responseData.products[i].p_price}"
class="w-full bg-gray-800 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none  py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
required></td><td class="whitespace-nowrap px-6 py-4"><textarea id="desc${responseData.products[i].p_id}"name="desc${responseData.products[i].p_id}"
class="w-full bg-gray-800 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none  py-1 px-3 leading-8 transition-colors duration-200 ease-in-out">${responseData.products[i].p_desc}</textarea></td><td class="whitespace-nowrap px-6 py-4"><button class="disabled:opacity-25 bg-blue-500 hover:bg-primary2 text-white font-bold py-2 px-4 rounded inline-flex items-center"id="save${responseData.products[i].p_id}"onclick="saveProduct('${wallet}',${responseData.products[i].p_id});"><svg xmlns="http://www.w3.org/2000/svg"fill="none"viewBox="0 0 24 24"stroke-width="1.5"stroke="currentColor"class=" w-6 h-6 mr-2"><path stroke-linecap="round"stroke-linejoin="round"d="M10.125 2.25h-4.5c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125v-9M10.125 2.25h.375a9 9 0 019 9v.375M10.125 2.25A3.375 3.375 0 0113.5 5.625v1.5c0 .621.504 1.125 1.125 1.125h1.5a3.375 3.375 0 013.375 3.375M9 15l2.25 2.25L15 12"/></svg><span>Save</span></button></td>`;productTable.appendChild(row);}
addNewRow(wallet,responseData.products.length+1);}
export const saveProduct=async(wallet,pid)=>{const name=document.getElementById("pname"+pid).value;const price=document.getElementById("price"+pid).value;const desc=document.getElementById("desc"+pid).value;document.getElementById("save"+pid).disabled=true;document.getElementById("save"+pid).innerHTML=`Saving...`;document.getElementById("save"+pid).classList.add('animate-pulse');await fetch(scriptURL,{method:'POST',headers:{'Content-Type':'application/x-www-form-urlencoded'},body:'pname='+name+'&price='+price+'&pdesc='+desc+'&wallet='+wallet+'&pid='+pid+'&update=true'}).then(response=>response.json().then(data=>({data:console.log('RDATA',(data.result=='error')?alert('ERROR::'+data.error):console.log('SUCCESS::'+data.result)),status:response.status}))).catch(error=>console.error('NetworkError:',alert('NETWORK ERROR::'+error)))
const nextid=parseInt(pid)+1;const nextrow=document.getElementById("pname"+nextid);if(nextrow==null){addNewRow(wallet,nextid);}
document.getElementById("save"+pid).disabled=false;document.getElementById("save"+pid).innerHTML=`<svg xmlns="http://www.w3.org/2000/svg"fill="none"viewBox="0 0 24 24"stroke-width="1.5"stroke="currentColor"class=" w-6 h-6 mr-2"><path stroke-linecap="round"stroke-linejoin="round"d="M10.125 2.25h-4.5c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125v-9M10.125 2.25h.375a9 9 0 019 9v.375M10.125 2.25A3.375 3.375 0 0113.5 5.625v1.5c0 .621.504 1.125 1.125 1.125h1.5a3.375 3.375 0 013.375 3.375M9 15l2.25 2.25L15 12"/></svg><span>Save</span>`;document.getElementById("save"+pid).classList.remove('animate-pulse');}
function addNewRow(wallet,pid){const row=document.createElement('tr');row.className="border-b dark:border-neutral-500 ";row.innerHTML=`<td class="whitespace-nowrap px-6 py-4 font-medium">${pid}</td><td class="whitespace-nowrap px-6 py-4"><input type="text"id="pname${pid}"name="pname${pid}"
class="w-full bg-gray-800 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
required></td><td class="whitespace-nowrap px-6 py-4"><input type="number"id="price${pid}"name="price${pid}"
class="w-full bg-gray-800 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"
required></td><td class="whitespace-nowrap px-6 py-4"><textarea id="desc${pid}"name="desc${pid}"
class="w-full bg-gray-800 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"></textarea></td><td class="whitespace-nowrap px-6 py-4"><button class="disabled:opacity-25 bg-blue-500 hover:bg-primary2 text-white font-bold py-2 px-4 rounded inline-flex items-center"id="save${pid}"onclick="saveProduct('${wallet}',${pid});"><svg xmlns="http://www.w3.org/2000/svg"fill="none"viewBox="0 0 24 24"stroke-width="1.5"stroke="currentColor"class=" w-6 h-6 mr-2"><path stroke-linecap="round"stroke-linejoin="round"d="M10.125 2.25h-4.5c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125v-9M10.125 2.25h.375a9 9 0 019 9v.375M10.125 2.25A3.375 3.375 0 0113.5 5.625v1.5c0 .621.504 1.125 1.125 1.125h1.5a3.375 3.375 0 013.375 3.375M9 15l2.25 2.25L15 12"/></svg><span>Save</span></button></td>`;productTable.appendChild(row);}
export async function withdrawNow(dcontract){if(!confirm('Are you sure that you have enough balance in your contract to initiate withdrawal ?')){return;}
const provider=await new ethers.BrowserProvider(window.ethereum)
const signer=await provider.getSigner()
await switchToMatic();const DeployedContract=await new ethers.Contract(dcontract,PAY_V1_ABI(),signer);const txn=await DeployedContract.settleFunds('0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',{gasLimit:3000000}).then((transaction)=>{console.dir("RESULT::"+transaction)
alert("Withdraw Initiated")
transaction.wait()
then((receipt)=>{alert("Withdraw Successful")}).catch(err=>alert("ERROR::"+err.reason))}).catch(err=>alert(err.reason))}